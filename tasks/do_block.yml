---

- name: Including Variable
  include_vars: vars/main.yml

- name: Creating Block Storage
  digital_ocean_block_storage:
    state: present
    command: create
    api_token: "{{ do_token }}"
    region: "{{ do_region }}"
    block_size: "{{ do_volume_size }}"
    volume_name: "{{ do_volume_name }}"
  when: (bw_do_cmd == "create_volume" or bw_do_cmd == "create_attach_volume")
  register: _bw_do_create_volume_result
  
- set_fact:
    _do_volume_id: "{{ _bw_do_create_volume_result }}"
  when: (_bw_do_create_volume_result is defined) and (bw_do_cmd == "create_volume" or bw_do_cmd == "create_attach_volume")
  
- debug:
    msg: "{{ _do_volume_id }}"
  when: (_do_volume_id is defined)

- name: Attaching Block Storage
  digital_ocean_block_storage:
    state: present
    command: attach
    api_token: "{{ do_token }}"
    region: "{{ do_region }}"
    volume_name: "{{ do_volume_name }}"
    droplet_id: "{{ do_instance_name }}"
  when: (bw_do_cmd == "attach_volume" or bw_do_cmd == "create_attach_volume") and (do_instance_name is defined)
  register: _bw_do_attach_volume_result
  
  
- name: Detaching Block Storage
  digital_ocean_block_storage:
    state: absent
    command: attach
    api_token: "{{ do_token }}"
    region: "{{ do_region }}"
    volume_name: "{{ do_volume_name }}"
    droplet_id: "{{ do_instance_name }}"
  when: (bw_do_cmd == "detach_volume") and (do_instance_name is defined)
  register: _bw_do_detach_volume_result  
  
- name: Deleting Block Storage
  digital_ocean_block_storage:
    state: absent
    command: create
    api_token: "{{ do_token }}"
    region: "{{ do_region }}"
    volume_name: "{{ do_volume_name }}"
  when: (bw_do_cmd == "delete_volume")
  register: _bw_do_delete_volume_result
  
- name: Block Resize
  uri:
    url: "{{ url }}/{{ version }}/volumes/{{ do_volume_name }}/actions"
    method: POST
    validate_certs: false
    return_content: yes
    status_code: 202
    headers:
      Accept: "application/json"
      Authorization: "Bearer {{ do_token }}"
    body_format: json
    body: "{\"type\":\"resize\", \"size_gigabytes\": {{ do_volume_size }}, \"region\": \"{{ do_region }}\"}"
  ignore_errors: yes
  when: (bw_do_cmd == "resize_volume")
  register: _bw_do_reset_droplet_result
  